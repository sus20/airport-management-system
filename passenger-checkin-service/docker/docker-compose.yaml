version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - passenger_checkin_net

  kafka-broker:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka-broker
    ports:
      - "9092:9092" # internal broker
      - "9093:9093" # external broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - passenger_checkin_net

  kafka-dashboard:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-dashboard
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: passenger-checkin-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:9092
    depends_on:
      - kafka-broker
    networks:
      - passenger_checkin_net

  passenger-db:
    image: mongo:6.0
    container_name: passenger-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - passenger_checkin_net

  passenger-db-admin:
    image: mongo-express
    container_name: passenger-db-admin
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: passenger-db
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
    depends_on:
      - passenger-db
    networks:
      - passenger_checkin_net

volumes:
  mongo_data:
    name: passenger_checkin_mongo_data

networks:
  passenger_checkin_net:
    name: passenger_checkin_network