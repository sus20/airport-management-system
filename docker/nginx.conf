server {
    listen 80;
    server_name localhost;

    # === FLIGHTS SERVICE ===
    # Remove trailing slash if present for /flights
    location = /flights/ {
        return 301 /flights;
    }

    # Main flights endpoint
    location = /flights {
        proxy_pass http://flight-scheduler-service:8080/flights;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # All other flight paths
    location /flights/ {
        proxy_pass http://flight-scheduler-service:8080/flights/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # === BAGGAGE SERVICE ===
    # Remove trailing slash if present for /baggage
    location = /baggage/ {
        return 301 /baggage;
    }

    # Main baggage endpoint
    location = /baggage {
        proxy_pass http://passenger-checkin-service:8080/baggage;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # All other baggage paths
    location /baggage/ {
        proxy_pass http://passenger-checkin-service:8080/baggage/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # === CHECKINS SERVICE ===
    # Remove trailing slash if present for /checkins
    location = /checkins/ {
        return 301 /checkins;
    }

    # Main checkins endpoint
    location = /checkins {
        proxy_pass http://passenger-checkin-service:8080/checkins;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # All other checkins paths
    location /checkins/ {
        proxy_pass http://passenger-checkin-service:8080/checkins/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # === PASSENGERS SERVICE ===
    # Remove trailing slash if present for /passengers
    location = /passengers/ {
        return 301 /passengers;
    }

    # Main passengers endpoint
    location = /passengers {
        proxy_pass http://passenger-checkin-service:8080/passengers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # All other passengers paths
    location /passengers/ {
        proxy_pass http://passenger-checkin-service:8080/passengers/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoints
    location /health/flights {
        proxy_pass http://flight-scheduler-service:8080/actuator/health;
        proxy_set_header Host $host;
    }

    location /health/passengers {
        proxy_pass http://passenger-checkin-service:8080/actuator/health;
        proxy_set_header Host $host;
    }

    # Default location - return 404 for everything else
    location / {
        return 404;
    }
}